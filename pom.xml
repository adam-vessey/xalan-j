<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
  </parent>

    <groupId>org.docx4j.org.apache</groupId>
	<artifactId>xalan-parent</artifactId>	
	<version>${revision}</version>
	
	<properties>
		<revision>11.0.0-SNAPSHOT</revision>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <!-- github server corresponds to entry in ~/.m2/settings.xml -->
	    <github.global.server>github</github.global.server>
	    <maven.javadoc.skip>true</maven.javadoc.skip> <!--  see https://stackoverflow.com/questions/7412016/how-can-i-disable-the-maven-javadoc-plugin-from-the-command-line -->
	</properties>

    <packaging>pom</packaging>

  <name>Xalan Java</name>
    
    <modules>
        <module>xalan-serializer</module>
        <!-- can't split out a <module>xalan-xpath</module> containing org.apache.xml and xpath,
             since these still have some deps on xalan-interpretive 
             (eg using an extension function in an xpath expression).
             If we aren't using that anywhere, we may be able to do remove that and do it, but there are still other complexities.
             To see these, search for apache.xalan in apache.xpath -->
        <module>xalan-interpretive</module>
        <!-- <module>xalan-interpretive-xerces</module>  -->
        <module>xalan-metainf</module> 
        <module>xalan-bundled-jar</module>
        
        <!-- 
	        <module>xalan-sample-servlet</module>
	        <module>xalan-sample-translets</module>
	        <module>xalan-sample-applet</module>
         -->
    </modules>  


  <description>
    Xalan-Java is an XSLT processor for transforming XML documents into HTML,
    text, or other XML document types. It implements XSL Transformations (XSLT)
    Version 1.0 and XML Path Language (XPath) Version 1.0.
  </description>
  
  <url>https://github.com/plutext/xalan-j</url>  

	<licenses>
	  <license>
	    <name>Apache 2</name>
	    <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
	  </license>
  	</licenses>

	<!--  https://central.sonatype.org/pages/requirements.html
	      requires developers be populated. Of course most 
	      of the work was originally done by the Xalan committers;
	      thank you! and see http://people.apache.org/committers-by-project.html#xalan -->
	<developers>
		<developer>
			<name>Jason Harrop</name>
			<email>jason@plutext.org</email>
			<organization>Plutext</organization>
			<organizationUrl>http://www.plutext.com</organizationUrl>
		</developer>
		<developer>
			<name>Xalan committers</name>
			<email>dev@xalan.apache.org</email>
			<organization>Apache</organization>
			<organizationUrl>http://people.apache.org/committers-by-project.html#xalan</organizationUrl>
		</developer>
	</developers>
	
	<scm>
		<developerConnection>scm:git|git@github.com:plutext/xalan-j.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<release>11</release>				
				</configuration>
			</plugin>

			<!-- hiccups on org.slf4j since it is a multi-release jar
				 broken in Java 11, fixed in Java 12
				 https://bugs.openjdk.java.net/browse/JDK-8222309
			 

			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.0</version> 
				<configuration>
					<maxmemory>512m</maxmemory>
					<additionalJOption>-Xdoclint:none</additionalJOption> 
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->

			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>flatten-maven-plugin</artifactId>
			    <version>1.0.0</version>
			    <configuration>
			        <!--  <updatePomFile>true</updatePomFile>-->
			        <flattenMode>oss</flattenMode>           
			    </configuration>
			    <executions>
			        <execution>
			            <id>flatten</id>
			            <phase>process-resources</phase>
			            <goals>
			                <goal>flatten</goal>
			            </goals>
			        </execution>
			        <execution>
			            <id>flatten.clean</id>
			            <phase>clean</phase>
			            <goals>
			                <goal>clean</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>			

			
		</plugins>        
        
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <mavenExecutorId>forked-path</mavenExecutorId>
                        <useReleaseProfile>false</useReleaseProfile>
                        <arguments>${arguments} -Psonatype-oss-release</arguments>
                    </configuration>
                </plugin>
                
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>flatten-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>flatten</goal>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
                
            </plugins>
            
            
        </pluginManagement>
    </build>

	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.8.0-beta4</version> <!-- keep this same version as docx4j -->
		</dependency>
		
	</dependencies>
</project>
